/// <reference types="jest" />
export declare const templates: {
    ProfileCardAriaLabel: () => string;
    LogDownloadReport: () => string;
    PlatformServiceTooltipText: () => string;
    LogNoErrorsTitleText: () => string;
    LogNoErrorsDescriptionText: () => string;
    LogSingleErrorTitleText: () => string;
    LogSingleErrorDescriptionText: () => string;
    LogViewSingleErrorText: () => string;
    LogHideSingleErrorText: () => string;
    LogSingleErrorCopyToClipboardText: () => string;
    LogClearSingleError: () => string;
    LogMultipleErrorsTitleText: () => string;
    LogMultipleErrorsDescriptionText: () => string;
    LogViewMultipleErrorsText: () => string;
    LogHideMultipleErrorText: () => string;
    LogMultipleErrorsCopyToClipboardText: () => string;
    LogClearMultipleErrors: () => string;
    NoIssueDetected: () => string;
    PlatformServicesIsDegradedText: () => string;
    PlatformServicesAreDegradedText: () => string;
    PlatformServicesIsExperencingIssueText: () => string;
    PlatformServicesAreExperencingIssueText: () => string;
    PlatformServiceMoreInfoText: jest.Mock<any, any>;
    TwilioStatusPage: jest.Mock<any, any>;
    AppStatusPlatformServicesUnavailableText: () => string;
    AppStatusPlatformServicesUnavailableHeaderText: () => string;
    AppStatusApplicationStatusHeaderNoIssueText: () => string;
    AppStatusApplicationStatusHeaderOperationWarning: () => string;
    AppStatusApplicationStatusHeaderDegradedText: () => string;
    AppStatusApplicationStatusNoIssueText: () => string;
    AppStatusApplicationStatusDegradedText: () => string;
    AppStatusApplicationStatusServiceDownText: () => string;
    AppStatusApplicationStatusOnGoingIncidentText: () => string;
    AppStatusApplicationStatusOnGoingUIErrorText: () => string;
    AppStatusApplicationStatusOnGoingIncidentAndServicesText: () => string;
    AppStatusApplicationStatusOnGoingIncidentAndServicesTextAndUIErrorText: () => string;
    AppStatusApplicationStatusUnavailableText: () => string;
    AppStatusApplicationStatusHeaderUnavailableText: () => string;
};
