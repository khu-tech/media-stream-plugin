import { ParticipantTypes } from "../Participants/participants.types";
import { ParticipantStatus, ParticipantType } from "./Conferences.definitions";
/**
 * Conference participant
 * @typedef ConferenceParticipant
 * @property {IQueue} [queue] queue associated with the participant (in case of transfer to queue)
 * @property {IWorker} [worker] worker associated with the participant
 * @property {string} callSid call SID associated with the voice connection of the participant
 * @property {boolean} isMyself is participant associated with the currently logged in user
 * @property {boolean} onHold is participant on hold
 * @property {boolean} muted is participant muted
 * @property {boolean} connecting is participant in connecting state
 * @property {ConferencesState.ParticipantStatus} status status of the participant
 * @property {ConferencesState.ParticipantType} participantType type of the participant
 * @property {string} reservationSid reservation SID for the participant
 * @property {string} workerSid SID of the worker
 * @property {string} participantSid SID of the participant if external
 * @property {string} phoneNumber Phone number of the participant if external
 * @memberof ConferencesState
 */
export declare class ConferenceParticipant {
    private _source;
    private _callSid;
    private _participantSid;
    private _participantType;
    private _phoneNumber;
    participantLeftTimestamp: number;
    constructor(source: any, callSid?: string, participantLeftTimestamp?: number);
    /**
     * @private
     */
    get source(): any;
    get worker(): import("../..").IWorker<any>;
    get queue(): import("../..").IQueue<any>;
    get onHold(): boolean;
    get muted(): boolean;
    get connecting(): boolean;
    set participantType(participantType: ParticipantType | ParticipantTypes | undefined);
    get participantType(): ParticipantType | ParticipantTypes | undefined;
    get reservationSid(): any;
    get workerSid(): any;
    get status(): ParticipantStatus;
    get uniqueId(): string;
    get sid(): string;
    get isMyself(): boolean;
    get callSid(): string;
    get participantSid(): string | undefined;
    get phoneNumber(): string | undefined;
    set participantSid(participantSid: string | undefined);
    set phoneNumber(phoneNumber: string | undefined);
}
