export declare type ParticipantTypes = "agent" | "external" | "customer" | "unknown";
declare type ChannelTypes = "voice";
export interface RawVoiceProperties {
    AccountSid: string;
    CallSid: string;
    Coaching: boolean;
    ConferenceSid: string;
    EndConferenceOnExit: boolean;
    FriendlyName: string;
    Hold: boolean;
    Muted: boolean;
    SequenceNumber: number;
    StartConferenceOnEnter: boolean;
    StatusCallbackEvent: string;
    Timestamp: string;
    From: string;
    To: string;
}
export interface VoiceProperties {
    accountSid: string;
    callSid: string;
    coaching: boolean;
    conferenceSid: string;
    endConferenceOnExit: boolean;
    friendlyName: string;
    hold: boolean;
    muted: boolean;
    sequenceNumber: number;
    startConferenceOnEnter: boolean;
    statusCallbackEvent: string;
    timestamp: string;
    from: string;
    to: string;
}
export declare type RawVoicePropertiesResponse = Record<keyof RawVoiceProperties, string[]>;
export interface RawParticipantBase<Media> {
    routing_properties: {
        worker_sid: string;
        task_sid: string;
        reservation_sid: string;
    };
    media_properties: Media;
    participant_sid: string;
    type: ParticipantTypes;
    channel_type: ChannelTypes;
    channel_sid: string;
    interaction_sid: string;
}
export interface ParticipantBase<Media> {
    routingProperties: {
        workerSid: string;
        taskSid: string;
        reservationSid: string;
    };
    mediaProperties: Media;
    participantSid: string;
    type: ParticipantTypes;
    channelType: ChannelTypes;
    channelSid: string;
    interactionSid: string;
    isPending?: boolean;
}
export declare type ClassMediaProperties = Record<keyof VoiceProperties, string[]>;
export declare type ParticipantResponse = RawParticipantBase<RawVoicePropertiesResponse>;
export declare type Participant = ParticipantBase<VoiceProperties>;
export declare type PendingParticipant = Pick<RawParticipantBase<RawVoiceProperties>, "channel_sid" | "interaction_sid"> & {
    sid: string;
};
export interface ParticipantState {
    isLoading: boolean;
    bySid: {
        [sid: string]: Participant;
    };
    byCallSid: {
        [sid: string]: Participant;
    };
    sids: string[];
}
export {};
