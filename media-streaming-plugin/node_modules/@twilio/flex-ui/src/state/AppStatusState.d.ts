import { Action, Dispatch } from "redux";
import { ComponentStatus } from "src/PrivateUtils";
/**
 * State of the view
 *
 * @interface AppStatusState
 * @property {boolean} isAppStatusPanelOpen - whether the navigation sidebar is open
 * @category State
 */
export interface AppStatusState {
    readonly isAppStatusPanelOpen: boolean;
    readonly componentAffected: ParsedComponent[];
    readonly incidentAffected: ParsedComponent[];
    readonly isTwilioStatusAvailable: boolean;
    readonly tokenExpired: boolean;
}
export interface AppStatusStateAction extends Action {
    readonly payload?: any;
}
export interface ParsedComponent {
    name: string;
    id: string;
    created_at: Date;
    updated_at: Date;
    status: ComponentStatus;
    source: DegradationDetectedSource;
    incidents?: string[];
}
export declare enum DegradationDetectedSource {
    Summary = "Summary API",
    Unresolved = "Unresolved API"
}
export declare const ACTION_TOGGLE_APP_STATUS_PANEL = "ACTION_TOGGLE_APP_STATUS_PANEL";
export declare const ACTION_SHOW_APP_STATUS_PANEL = "ACTION_SHOW_APP_STATUS_PANEL";
export declare const ACTION_HIDE_APP_STATUS_PANEL = "ACTION_HIDE_APP_STATUS_PANEL";
export declare const SET_COMPONENT_AFFECTED_STATUS = "SET_COMPONENT_AFFECTED_STATUS";
export declare const SET_INCIDENT_AFFECTED_STATUS = "SET_INCIDENT_AFFECTED_STATUS";
export declare const SET_TWILIO_STATUS_AVAILABILILTY = "SET_TWILIO_STATUS_AVAILABILILTY";
export declare const SET_TOKEN_EXPIRED = "SET_TOKEN_EXPIRED";
export declare function reduce(state: AppStatusState, action: AppStatusStateAction): AppStatusState;
export declare class Actions {
    private static _dispatcher;
    static get dispatcher(): Dispatch<any>;
    static set dispatcher(dispatcher: Dispatch<any>);
    static toggleAppStatusPanel(): void;
    static hideAppStatusPanel(): void;
    static showAppStatusPanel(): void;
    static setIncidentAffected(obj: ParsedComponent[]): void;
    static setComponentAffected(obj: ParsedComponent[]): void;
    static setTwilioStatusAvailibility(payload: boolean): void;
    static setTokenExpired(): void;
}
