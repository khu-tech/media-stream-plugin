import { Dispatch } from "redux";
import { QueuesConfig, QueuesFilterFunction, QueuesState, QueuesStateActionTypes, TRQueue, WorkerQueueChannelMetadata } from "./QueuesStateTypes";
export declare const initialState: QueuesState;
export declare function reduce(state: QueuesState, action: QueuesStateActionTypes): QueuesState;
export declare class Actions {
    private static _dispatcher;
    static get dispatcher(): Dispatch<QueuesStateActionTypes>;
    static set dispatcher(dispatcher: Dispatch<QueuesStateActionTypes>);
    static updateQueuesConfiguration(config: QueuesConfig): void;
    static setFilter(filter: QueuesFilterFunction): void;
    static fetchMetadata(): Promise<void>;
    static fetchQueues(): Promise<TRQueue[]>;
    static fetchChannels(): Promise<Required<WorkerQueueChannelMetadata>[]>;
}
