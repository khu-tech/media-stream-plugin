import { ContentFragment, DynamicContentStore } from "@twilio/flex-ui-core";
import * as React from "react";
export declare const displayName = "SegmentInfo";
export declare const Content: DynamicContentStore;
export interface SegmentInfoImplStateProps {
    timestamp: string;
    canCommentAndAssess: boolean;
    segments: {
        id: string;
        duration: number;
    }[];
}
export declare type SegmentInfoImplOwnProps = {
    children?: React.ReactElement<ContentFragment>;
    onSegmentSelect: (id: string) => void;
    segmentId: string;
    hideCommentAndAssess?: boolean;
};
export declare type SegmentInfoImplProps = SegmentInfoImplStateProps & SegmentInfoImplOwnProps;
interface SegmentInfoImplState {
    isCommentPopoverOpen: boolean;
    isAssessPopoverOpen: boolean;
}
export declare class SegmentInfoImpl extends React.PureComponent<SegmentInfoImplProps, SegmentInfoImplState> {
    static defaultProps: {
        hideCommentAndAssess: boolean;
    };
    commentButtonRef: React.RefObject<HTMLDivElement>;
    assessButtonRef: React.RefObject<HTMLDivElement>;
    state: SegmentInfoImplState;
    closeCommentPopover: () => void;
    openCommentPopover: () => void;
    closeAssessPopover: () => void;
    openAssessPopover: () => void;
    render(): JSX.Element;
}
export {};
