import { FlexError } from "../FlexError";
import { SSOConfig } from "../state/AppConfig";
/**
 * Replace reserved params from query string
 * Example: http://localhost/?Token=foo&A=1&Identity=batman will changed to http://localhost/?A=1
 * @private
 */
export declare function sanitizeSSOParams(s: string): string;
export declare function getDefaultLoginWindowFeatures(): Record<string, any>;
export declare function stringifyLoginWindowFeatures(features: {
    [k: string]: any;
}): string;
/**
 * Overrides error's message based on Flex Status
 * @private
 */
export declare const parseCriticalPathError: (error: FlexError) => Promise<void>;
export declare class IdpUrl {
    private static accountSid;
    private static idpUrl;
    private static error;
    private static fetchRedirectURL;
    static get(accountSid: string, config: SSOConfig): Promise<string | undefined>;
    static resetCache(): void;
    constructor();
}
